{"name": "Проверка выпадающего списка в разделе «Вопросы о важном»", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_main_page.TestAccordion object at 0x000001D9B2ED9040>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"816347aa0a389e112b73b11bfbcd3e07\")>\nquestion_locator = ('id', 'accordion__heading-6'), answer_locator = ('css selector', '#accordion__panel-6 p')\nexpected_text = 'Да, пока самокат не привезли. Штрафа не будет, объяснительной записки тоже не попросим. Все же свои.'\n\n    @pytest.mark.parametrize('question_locator, answer_locator, expected_text', DataAccordion.DATA_ACCORDION)\n    @allure.title('Проверка выпадающего списка в разделе «Вопросы о важном»')\n    @allure.description('На странице проверяем, что при клике на каждый вопрос отображается соответсвующий ответ')\n    def test_click_accordion_questions(self, driver, question_locator, answer_locator, expected_text):\n        page = MainPage(driver)\n        page.open()\n>       page.wait_for_element_visible(MainPageLocators.ACCORDION_LIST)\n\ntests\\test_main_page.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\base_page.py:19: in wait_for_element_visible\n    WebDriverWait(self.driver, 10).until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"816347aa0a389e112b73b11bfbcd3e07\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001D9B2F4AF20>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "description": "На странице проверяем, что при клике на каждый вопрос отображается соответсвующий ответ", "steps": [{"name": "Открытие страницы", "status": "passed", "start": 1742842052206, "stop": 1742842089669}], "parameters": [{"name": "question_locator", "value": "('id', 'accordion__heading-6')"}, {"name": "answer_locator", "value": "('css selector', '#accordion__panel-6 p')"}, {"name": "expected_text", "value": "'Да, пока самокат не привезли. Штрафа не будет, объяснительной записки тоже не попросим. Все же свои.'"}], "start": 1742842052206, "stop": 1742842099927, "uuid": "fbf77b38-bca8-4ad5-9483-54a59ca91799", "historyId": "fcc8bfbde1068c409cb9e29d06f55d01", "testCaseId": "798f2fd8b0581232c129a2f3efe4bd5d", "fullName": "tests.test_main_page.TestAccordion#test_click_accordion_questions", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_page"}, {"name": "subSuite", "value": "TestAccordion"}, {"name": "host", "value": "WIN-MSISGTMAM5B"}, {"name": "thread", "value": "13156-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_page"}]}